{
  "version": 4,
  "terraform_version": "1.12.2",
  "serial": 75,
  "lineage": "222edcad-b1f6-887b-7afc-a5aae344da57",
  "outputs": {
    "master_private_ip": {
      "value": "10.0.1.28",
      "type": "string"
    },
    "master_public_ip": {
      "value": "54.146.244.40",
      "type": "string"
    },
    "worker_private_ips": {
      "value": [
        "10.0.1.22",
        "10.0.1.157"
      ],
      "type": [
        "tuple",
        [
          "string",
          "string"
        ]
      ]
    },
    "worker_public_ips": {
      "value": [
        "3.88.26.122",
        "3.95.132.69"
      ],
      "type": [
        "tuple",
        [
          "string",
          "string"
        ]
      ]
    }
  },
  "resources": [
    {
      "mode": "data",
      "type": "aws_key_pair",
      "name": "existing_k8s_key_pair",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:357457025123:key-pair/dhirajsajagure",
            "create_time": "2025-07-30T16:14:35Z",
            "filter": null,
            "fingerprint": "3b:20:c0:4f:b5:92:d9:74:33:12:4f:12:f0:57:41:bc:7e:50:50:8b",
            "id": "key-01d01dac1fa90d489",
            "include_public_key": false,
            "key_name": "dhirajsajagure",
            "key_pair_id": "key-01d01dac1fa90d489",
            "key_type": "rsa",
            "public_key": "",
            "region": "us-east-1",
            "tags": {},
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "k8s_master",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 2,
          "attributes": {
            "ami": "ami-053b0d53c279acc90",
            "arn": "arn:aws:ec2:us-east-1:357457025123:instance/i-0107a46e0f883277d",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 2,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "",
            "id": "i-0107a46e0f883277d",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "c3.xlarge",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "dhirajsajagure",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": 0,
            "primary_network_interface_id": "eni-052e69425118774db",
            "private_dns": "ip-10-0-1-28.ec2.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.1.28",
            "public_dns": "ec2-54-146-244-40.compute-1.amazonaws.com",
            "public_ip": "54.146.244.40",
            "region": "us-east-1",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 0,
                "volume_id": "vol-076c6edb28fd35b7a",
                "volume_size": 20,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-0cd9ba1105b31563a",
            "tags": {
              "Name": "k8s-master",
              "Role": "master"
            },
            "tags_all": {
              "Name": "k8s-master",
              "Role": "master"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\nset -e\n\n# Disable swap\nswapoff -a\nsed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n\n# Install necessary packages\napt-get update\napt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release\n\n# Add Docker GPG key and repository\ninstall -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list \u003e /dev/null\n\n# Install containerd (as Docker's runtime)\napt-get update\napt-get install -y containerd.io\n\n# Configure containerd and restart\nmkdir -p /etc/containerd\ncontainerd config default | tee /etc/containerd/config.toml\nsed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\nsystemctl restart containerd\nsystemctl enable containerd\n\n# Add Kubernetes GPG key and repository\ncurl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\necho 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list\n\n# Install kubelet, kubeadm, kubectl\napt-get update\napt-get install -y kubelet kubeadm kubectl\napt-mark hold kubelet kubeadm kubectl\n\n# Install Helm via snap\nsnap install helm --classic\n\n# Enable kernel modules and sysctl parameters for Kubernetes networking\nmodprobe overlay\nmodprobe br_netfilter\n\ncat \u003c\u003cEOT_INNER | tee /etc/modules-load.d/k8s.conf\noverlay\nbr_netfilter\nEOT_INNER\n\ncat \u003c\u003cEOT_INNER | tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-iptables  = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.ipv4.ip_forward                 = 1\nEOT_INNER\n\nsysctl --system\n\n# Only run kubeadm init and flannel install on the master node\nif [[ \"$(hostname -s)\" == \"k8s-master\" ]]; then\n  # Initialize the Kubernetes control plane with Flannel's POD CIDR\n  sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=10.0.1.20 --upload-certs\n\n  # Configure kubectl for the ubuntu user\n  mkdir -p /home/ubuntu/.kube\n  sudo cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config\n  sudo chown ubuntu:ubuntu /home/ubuntu/.kube/config\n  export KUBECONFIG=/home/ubuntu/.kube/config\n\n  # Apply the Flannel network manifest\n  kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml\nfi\n\necho \"Kubernetes tools, containerd, and Helm installed successfully!\"\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0ea833b44e6eaf207"
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_security_group.k8s_sg",
            "aws_subnet.k8s_subnet",
            "aws_vpc.k8s_vpc",
            "data.aws_key_pair.existing_k8s_key_pair"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_instance",
      "name": "k8s_workers",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 2,
          "attributes": {
            "ami": "ami-053b0d53c279acc90",
            "arn": "arn:aws:ec2:us-east-1:357457025123:instance/i-01149bb6fc57c6694",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 2,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "",
            "id": "i-01149bb6fc57c6694",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "c3.xlarge",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "dhirajsajagure",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": 0,
            "primary_network_interface_id": "eni-0d97d756c4379f8be",
            "private_dns": "ip-10-0-1-22.ec2.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.1.22",
            "public_dns": "ec2-3-88-26-122.compute-1.amazonaws.com",
            "public_ip": "3.88.26.122",
            "region": "us-east-1",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 0,
                "volume_id": "vol-072da4dfdbe9db967",
                "volume_size": 20,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-0cd9ba1105b31563a",
            "tags": {
              "Name": "k8s-worker-1",
              "Role": "worker"
            },
            "tags_all": {
              "Name": "k8s-worker-1",
              "Role": "worker"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\nset -e\n\n# Disable swap\nswapoff -a\nsed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n\n# Install necessary packages\napt-get update\napt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release\n\n# Add Docker GPG key and repository\ninstall -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list \u003e /dev/null\n\n# Install containerd (as Docker's runtime)\napt-get update\napt-get install -y containerd.io\n\n# Configure containerd and restart\nmkdir -p /etc/containerd\ncontainerd config default | tee /etc/containerd/config.toml\nsed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\nsystemctl restart containerd\nsystemctl enable containerd\n\n# Add Kubernetes GPG key and repository\ncurl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\necho 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list\n\n# Install kubelet, kubeadm, kubectl\napt-get update\napt-get install -y kubelet kubeadm kubectl\napt-mark hold kubelet kubeadm kubectl\n\n# Install Helm via snap\nsnap install helm --classic\n\n# Enable kernel modules and sysctl parameters for Kubernetes networking\nmodprobe overlay\nmodprobe br_netfilter\n\ncat \u003c\u003cEOT_INNER | tee /etc/modules-load.d/k8s.conf\noverlay\nbr_netfilter\nEOT_INNER\n\ncat \u003c\u003cEOT_INNER | tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-iptables  = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.ipv4.ip_forward                 = 1\nEOT_INNER\n\nsysctl --system\n\n# Only run kubeadm init and flannel install on the master node\nif [[ \"$(hostname -s)\" == \"k8s-master\" ]]; then\n  # Initialize the Kubernetes control plane with Flannel's POD CIDR\n  sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=10.0.1.20 --upload-certs\n\n  # Configure kubectl for the ubuntu user\n  mkdir -p /home/ubuntu/.kube\n  sudo cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config\n  sudo chown ubuntu:ubuntu /home/ubuntu/.kube/config\n  export KUBECONFIG=/home/ubuntu/.kube/config\n\n  # Apply the Flannel network manifest\n  kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml\nfi\n\necho \"Kubernetes tools, containerd, and Helm installed successfully!\"\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0ea833b44e6eaf207"
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_security_group.k8s_sg",
            "aws_subnet.k8s_subnet",
            "aws_vpc.k8s_vpc",
            "data.aws_key_pair.existing_k8s_key_pair"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 2,
          "attributes": {
            "ami": "ami-053b0d53c279acc90",
            "arn": "arn:aws:ec2:us-east-1:357457025123:instance/i-0e659fdf91baef0d7",
            "associate_public_ip_address": true,
            "availability_zone": "us-east-1a",
            "capacity_reservation_specification": [
              {
                "capacity_reservation_preference": "open",
                "capacity_reservation_target": []
              }
            ],
            "cpu_options": [
              {
                "amd_sev_snp": "",
                "core_count": 2,
                "threads_per_core": 2
              }
            ],
            "credit_specification": [],
            "disable_api_stop": false,
            "disable_api_termination": false,
            "ebs_block_device": [],
            "ebs_optimized": false,
            "enable_primary_ipv6": null,
            "enclave_options": [
              {
                "enabled": false
              }
            ],
            "ephemeral_block_device": [],
            "get_password_data": false,
            "hibernation": false,
            "host_id": "",
            "host_resource_group_arn": null,
            "iam_instance_profile": "",
            "id": "i-0e659fdf91baef0d7",
            "instance_initiated_shutdown_behavior": "stop",
            "instance_lifecycle": "",
            "instance_market_options": [],
            "instance_state": "running",
            "instance_type": "c3.xlarge",
            "ipv6_address_count": 0,
            "ipv6_addresses": [],
            "key_name": "dhirajsajagure",
            "launch_template": [],
            "maintenance_options": [
              {
                "auto_recovery": "default"
              }
            ],
            "metadata_options": [
              {
                "http_endpoint": "enabled",
                "http_protocol_ipv6": "disabled",
                "http_put_response_hop_limit": 1,
                "http_tokens": "optional",
                "instance_metadata_tags": "disabled"
              }
            ],
            "monitoring": false,
            "network_interface": [],
            "outpost_arn": "",
            "password_data": "",
            "placement_group": "",
            "placement_partition_number": 0,
            "primary_network_interface_id": "eni-06c0a55f04fd6b4bc",
            "private_dns": "ip-10-0-1-157.ec2.internal",
            "private_dns_name_options": [
              {
                "enable_resource_name_dns_a_record": false,
                "enable_resource_name_dns_aaaa_record": false,
                "hostname_type": "ip-name"
              }
            ],
            "private_ip": "10.0.1.157",
            "public_dns": "ec2-3-95-132-69.compute-1.amazonaws.com",
            "public_ip": "3.95.132.69",
            "region": "us-east-1",
            "root_block_device": [
              {
                "delete_on_termination": true,
                "device_name": "/dev/sda1",
                "encrypted": false,
                "iops": 100,
                "kms_key_id": "",
                "tags": null,
                "tags_all": {},
                "throughput": 0,
                "volume_id": "vol-056315661a0e197b3",
                "volume_size": 20,
                "volume_type": "gp2"
              }
            ],
            "secondary_private_ips": [],
            "security_groups": [],
            "source_dest_check": true,
            "spot_instance_request_id": "",
            "subnet_id": "subnet-0cd9ba1105b31563a",
            "tags": {
              "Name": "k8s-worker-2",
              "Role": "worker"
            },
            "tags_all": {
              "Name": "k8s-worker-2",
              "Role": "worker"
            },
            "tenancy": "default",
            "timeouts": null,
            "user_data": "#!/bin/bash\nset -e\n\n# Disable swap\nswapoff -a\nsed -i '/ swap / s/^\\(.*\\)$/#\\1/g' /etc/fstab\n\n# Install necessary packages\napt-get update\napt-get install -y apt-transport-https ca-certificates curl gnupg lsb-release\n\n# Add Docker GPG key and repository\ninstall -m 0755 -d /etc/apt/keyrings\ncurl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg\necho \\\n  \"deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \\\n  $(lsb_release -cs) stable\" | tee /etc/apt/sources.list.d/docker.list \u003e /dev/null\n\n# Install containerd (as Docker's runtime)\napt-get update\napt-get install -y containerd.io\n\n# Configure containerd and restart\nmkdir -p /etc/containerd\ncontainerd config default | tee /etc/containerd/config.toml\nsed -i 's/SystemdCgroup = false/SystemdCgroup = true/g' /etc/containerd/config.toml\nsystemctl restart containerd\nsystemctl enable containerd\n\n# Add Kubernetes GPG key and repository\ncurl -fsSL https://pkgs.k8s.io/core:/stable:/v1.28/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg\necho 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.28/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list\n\n# Install kubelet, kubeadm, kubectl\napt-get update\napt-get install -y kubelet kubeadm kubectl\napt-mark hold kubelet kubeadm kubectl\n\n# Install Helm via snap\nsnap install helm --classic\n\n# Enable kernel modules and sysctl parameters for Kubernetes networking\nmodprobe overlay\nmodprobe br_netfilter\n\ncat \u003c\u003cEOT_INNER | tee /etc/modules-load.d/k8s.conf\noverlay\nbr_netfilter\nEOT_INNER\n\ncat \u003c\u003cEOT_INNER | tee /etc/sysctl.d/k8s.conf\nnet.bridge.bridge-nf-call-iptables  = 1\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.ipv4.ip_forward                 = 1\nEOT_INNER\n\nsysctl --system\n\n# Only run kubeadm init and flannel install on the master node\nif [[ \"$(hostname -s)\" == \"k8s-master\" ]]; then\n  # Initialize the Kubernetes control plane with Flannel's POD CIDR\n  sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --apiserver-advertise-address=10.0.1.20 --upload-certs\n\n  # Configure kubectl for the ubuntu user\n  mkdir -p /home/ubuntu/.kube\n  sudo cp -i /etc/kubernetes/admin.conf /home/ubuntu/.kube/config\n  sudo chown ubuntu:ubuntu /home/ubuntu/.kube/config\n  export KUBECONFIG=/home/ubuntu/.kube/config\n\n  # Apply the Flannel network manifest\n  kubectl apply -f https://raw.githubusercontent.com/flannel-io/flannel/master/Documentation/kube-flannel.yml\nfi\n\necho \"Kubernetes tools, containerd, and Helm installed successfully!\"\n",
            "user_data_base64": null,
            "user_data_replace_on_change": false,
            "volume_tags": null,
            "vpc_security_group_ids": [
              "sg-0ea833b44e6eaf207"
            ]
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMCwicmVhZCI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjYwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMiJ9",
          "dependencies": [
            "aws_security_group.k8s_sg",
            "aws_subnet.k8s_subnet",
            "aws_vpc.k8s_vpc",
            "data.aws_key_pair.existing_k8s_key_pair"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_internet_gateway",
      "name": "k8s_igw",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:357457025123:internet-gateway/igw-080f0f64304bd6d81",
            "id": "igw-080f0f64304bd6d81",
            "owner_id": "357457025123",
            "region": "us-east-1",
            "tags": {
              "Name": "k8s-igw"
            },
            "tags_all": {
              "Name": "k8s-igw"
            },
            "timeouts": null,
            "vpc_id": "vpc-000838992eac02cd3"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_vpc.k8s_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table",
      "name": "k8s_route_table",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:357457025123:route-table/rtb-0cbfa391b7fa28e24",
            "id": "rtb-0cbfa391b7fa28e24",
            "owner_id": "357457025123",
            "propagating_vgws": [],
            "region": "us-east-1",
            "route": [
              {
                "carrier_gateway_id": "",
                "cidr_block": "0.0.0.0/0",
                "core_network_arn": "",
                "destination_prefix_list_id": "",
                "egress_only_gateway_id": "",
                "gateway_id": "igw-080f0f64304bd6d81",
                "ipv6_cidr_block": "",
                "local_gateway_id": "",
                "nat_gateway_id": "",
                "network_interface_id": "",
                "transit_gateway_id": "",
                "vpc_endpoint_id": "",
                "vpc_peering_connection_id": ""
              }
            ],
            "tags": {
              "Name": "k8s-route-table"
            },
            "tags_all": {
              "Name": "k8s-route-table"
            },
            "timeouts": null,
            "vpc_id": "vpc-000838992eac02cd3"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_internet_gateway.k8s_igw",
            "aws_vpc.k8s_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_route_table_association",
      "name": "k8s_route_table_association",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "gateway_id": "",
            "id": "rtbassoc-01fd41aaf19c34af0",
            "region": "us-east-1",
            "route_table_id": "rtb-0cbfa391b7fa28e24",
            "subnet_id": "subnet-0cd9ba1105b31563a",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDAsImRlbGV0ZSI6MzAwMDAwMDAwMDAwLCJ1cGRhdGUiOjEyMDAwMDAwMDAwMH19",
          "dependencies": [
            "aws_internet_gateway.k8s_igw",
            "aws_route_table.k8s_route_table",
            "aws_subnet.k8s_subnet",
            "aws_vpc.k8s_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_security_group",
      "name": "k8s_sg",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:357457025123:security-group/sg-0ea833b44e6eaf207",
            "description": "Allow SSH, Kubernetes ports, and all internal traffic",
            "egress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": false,
                "to_port": 0
              }
            ],
            "id": "sg-0ea833b44e6eaf207",
            "ingress": [
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Allow SSH",
                "from_port": 22,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 22
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Kube-controller-manager",
                "from_port": 10252,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 10252
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Kube-scheduler",
                "from_port": 10251,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 10251
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Kubelet API",
                "from_port": 10250,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 10250
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "Kubernetes API Server",
                "from_port": 6443,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 6443
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "NodePort Services",
                "from_port": 30000,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 32767
              },
              {
                "cidr_blocks": [
                  "0.0.0.0/0"
                ],
                "description": "etcd Server Client",
                "from_port": 2379,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "tcp",
                "security_groups": [],
                "self": false,
                "to_port": 2380
              },
              {
                "cidr_blocks": [],
                "description": "Allow all internal traffic within SG",
                "from_port": 0,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "-1",
                "security_groups": [],
                "self": true,
                "to_port": 0
              },
              {
                "cidr_blocks": [],
                "description": "Flannel VXLAN overlay network",
                "from_port": 8472,
                "ipv6_cidr_blocks": [],
                "prefix_list_ids": [],
                "protocol": "udp",
                "security_groups": [],
                "self": true,
                "to_port": 8472
              }
            ],
            "name": "k8s-security-group",
            "name_prefix": "",
            "owner_id": "357457025123",
            "region": "us-east-1",
            "revoke_rules_on_delete": false,
            "tags": {
              "Name": "k8s-sg"
            },
            "tags_all": {
              "Name": "k8s-sg"
            },
            "timeouts": null,
            "vpc_id": "vpc-000838992eac02cd3"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "aws_vpc.k8s_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_subnet",
      "name": "k8s_subnet",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:357457025123:subnet/subnet-0cd9ba1105b31563a",
            "assign_ipv6_address_on_creation": false,
            "availability_zone": "us-east-1a",
            "availability_zone_id": "use1-az2",
            "cidr_block": "10.0.1.0/24",
            "customer_owned_ipv4_pool": "",
            "enable_dns64": false,
            "enable_lni_at_device_index": 0,
            "enable_resource_name_dns_a_record_on_launch": false,
            "enable_resource_name_dns_aaaa_record_on_launch": false,
            "id": "subnet-0cd9ba1105b31563a",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_association_id": "",
            "ipv6_native": false,
            "map_customer_owned_ip_on_launch": false,
            "map_public_ip_on_launch": true,
            "outpost_arn": "",
            "owner_id": "357457025123",
            "private_dns_hostname_type_on_launch": "ip-name",
            "region": "us-east-1",
            "tags": {
              "Name": "k8s-subnet"
            },
            "tags_all": {
              "Name": "k8s-subnet"
            },
            "timeouts": null,
            "vpc_id": "vpc-000838992eac02cd3"
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo2MDAwMDAwMDAwMDAsImRlbGV0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "aws_vpc.k8s_vpc"
          ]
        }
      ]
    },
    {
      "mode": "managed",
      "type": "aws_vpc",
      "name": "k8s_vpc",
      "provider": "provider[\"registry.terraform.io/hashicorp/aws\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "arn": "arn:aws:ec2:us-east-1:357457025123:vpc/vpc-000838992eac02cd3",
            "assign_generated_ipv6_cidr_block": false,
            "cidr_block": "10.0.0.0/16",
            "default_network_acl_id": "acl-0a0e6c1943fca2c4a",
            "default_route_table_id": "rtb-0f104c1a7ea7e81b4",
            "default_security_group_id": "sg-0ba1ece3af6d9bfd9",
            "dhcp_options_id": "dopt-00d923ab4b570ad0e",
            "enable_dns_hostnames": true,
            "enable_dns_support": true,
            "enable_network_address_usage_metrics": false,
            "id": "vpc-000838992eac02cd3",
            "instance_tenancy": "default",
            "ipv4_ipam_pool_id": null,
            "ipv4_netmask_length": null,
            "ipv6_association_id": "",
            "ipv6_cidr_block": "",
            "ipv6_cidr_block_network_border_group": "",
            "ipv6_ipam_pool_id": "",
            "ipv6_netmask_length": 0,
            "main_route_table_id": "rtb-0f104c1a7ea7e81b4",
            "owner_id": "357457025123",
            "region": "us-east-1",
            "tags": {
              "Name": "k8s-vpc"
            },
            "tags_all": {
              "Name": "k8s-vpc"
            }
          },
          "sensitive_attributes": [],
          "identity_schema_version": 0,
          "private": "eyJzY2hlbWFfdmVyc2lvbiI6IjEifQ=="
        }
      ]
    }
  ],
  "check_results": null
}
