ssh -i /Users/dsajagure/Documents/ec2access/dhirajsajagure.pem ubuntu@44.211.78.176
ssh -i /Users/dsajagure/Documents/ec2access/dhirajsajagure.pem ubuntu@54.209.121.240
ssh -i /Users/dsajagure/Documents/ec2access/dhirajsajagure.pem ubuntu@13.222.149.58



Terraform output for AWS: 

Apply complete! Resources: 3 added, 0 changed, 0 destroyed.

Outputs:

master_private_ip = "10.0.1.224"
master_public_ip = "54.211.202.213"
worker_private_ips = [
  "10.0.1.153",
  "10.0.1.20",
]
worker_public_ips = [
  "54.85.177.48",
  "54.165.25.25",
]
--- Terraform: terraform apply -auto-approve completed successfully ---

EC2 instances provisioned successfully!


alias ssh-awsmaster ='ssh -i /Users/dsajagure/Documents/dhirajsajagure.pem ubuntu@54.211.202.213'
alias ssh-awsworker1 ='ssh -i /Users/dsajagure/Documents/dhirajsajagure.pem ubuntu@54.85.177.48'
alias ssh-awsworker2 ='ssh -i /Users/dsajagure/Documents/dhirajsajagure.pem ubuntu@54.165.25.25'


Initi Kubernetes: 


sudo kubeadm init --pod-network-cidr=10.244.0.0/16 --upload-certs --apiserver-advertise-address 10.0.1.224



Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run "kubectl apply -f [podnetwork].yaml" with one of the options listed at:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join 10.0.1.224:6443 --token yt9oxx.kbfvputxi3slvpve \
	--discovery-token-ca-cert-hash sha256:ae17fe3d27289456cd9cf2a283568bec0c6b5c81b7e90f346f5d044cfc2b83f7

    kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml


     kubectl apply -f https://github.com/flannel-io/flannel/releases/latest/download/kube-flannel.yml
namespace/kube-flannel created
serviceaccount/flannel created
clusterrole.rbac.authorization.k8s.io/flannel created
clusterrolebinding.rbac.authorization.k8s.io/flannel created
configmap/kube-flannel-cfg created
daemonset.apps/kube-flannel-ds created


helm install \
  cert-manager jetstack/cert-manager \
  --namespace cert-manager \
  --version v1.18.2 \
  --set installCRDs=false 


  helm install rancher rancher-stable/rancher \
  --namespace cattle-system  --create-namespace \
  --set hostname=44.211.78.176.sslip.io \
  --set bootstrapPassword=admin \
  --set ingress.tls.source=rancher \
  --set replicas=1

worker 2   10.0.1.20


        kubectl delete pod rancher-ff9fd9dbf-xcpcb --grace-period=0 --force